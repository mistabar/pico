# Display Image & text on I2C driven ssd1306 OLED display 
from machine import Pin, I2C
from ssd1306 import SSD1306_I2C
import framebuf
import utime

WIDTH  = 128                                            # oled display width
HEIGHT = 32                                            # oled display height

i2c = I2C(0, scl=Pin(9), sda=Pin(8), freq=200000)       # Init I2C using pins GP8 & GP9 (default I2C0 pins)
print("I2C Address      : "+hex(i2c.scan()[0]).upper()) # Display device address
print("I2C Configuration: "+str(i2c))                   # Display I2C config


oled = SSD1306_I2C(WIDTH, HEIGHT, i2c)                  # Init oled display
oled.poweron()
oled.contrast(0)

# Raspberry Pi logo as 32x32 bytearray
buffer = bytearray(b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|?\x00\x01\x86@\x80\x01\x01\x80\x80\x01\x11\x88\x80\x01\x05\xa0\x80\x00\x83\xc1\x00\x00C\xe3\x00\x00~\xfc\x00\x00L'\x00\x00\x9c\x11\x00\x00\xbf\xfd\x00\x00\xe1\x87\x00\x01\xc1\x83\x80\x02A\x82@\x02A\x82@\x02\xc1\xc2@\x02\xf6>\xc0\x01\xfc=\x80\x01\x18\x18\x80\x01\x88\x10\x80\x00\x8c!\x00\x00\x87\xf1\x00\x00\x7f\xf6\x00\x008\x1c\x00\x00\x0c \x00\x00\x03\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
# Javka Serce Melba
buffer2 = bytearray(b"\xff\x07\xfc\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x07\xfc\x7f\xff\xfe\x03\xf8\x3f\xff\xff\xfe\x3f\xf8\xff\xff\xfe\x03\xf8\x3f\xff\xfc\x03\xf8\x1f\xff\xff\xf0\x07\xc0\x1f\xff\xfc\x03\xf8\x1f\xff\xfc\x23\xf8\x0f\xff\xff\xe0\x03\x80\x0f\xff\xfc\x23\xf8\x0f\xff\xf8\x61\xf0\x07\xff\xff\xc0\x01\x00\x07\xff\xf8\x61\xf0\x07\xff\xf8\xe0\xe0\x83\xff\xff\xc0\x00\x00\x03\xff\xf8\xe0\xe0\x83\xff\xf0\xf0\x40\xc3\xff\xff\x81\xc0\x03\x03\xff\xf0\xf0\x40\xc3\xff\xf1\xf8\x03\xe3\xff\xff\x83\xe0\x0f\x81\xff\xf1\xf8\x03\xe3\xff\xf1\xf8\x07\xe1\xff\xff\x03\xf0\x1f\x81\xff\xf1\xf8\x07\xe1\xff\xfb\xfe\x0f\xe1\xff\x8f\x07\xf8\x1f\xc1\xc3\xfb\xfe\x0f\xe1\xff\x7f\xff\xff\xf1\xff\x0f\x07\xf8\x3f\xc1\xc3\x7f\xff\xff\xf1\xff\x3f\xff\xff\xff\xfe\x0f\x07\xfc\x7f\xc1\xc1\x3f\xff\xff\xff\xff\x3f\x07\xff\x7f\xfc\x0f\x07\xff\xff\xc1\xe0\x3f\x07\xff\x7f\xff\x0f\x07\xf8\x3f\xe8\x1f\x07\xff\xff\xc1\xe0\x0f\x07\xf8\x3f\xef\x0f\x07\xf8\x3f\x00\x3f\x83\xff\xff\x81\xf0\x0f\x07\xf8\x3f\x07\x8f\xff\xf8\x3e\x00\x7f\x83\xff\xff\x83\xfe\x0f\xff\xf8\x3e\x07\x87\xff\xff\xfc\x00\xff\x81\xff\xff\x03\xff\x87\xff\xff\xfc\x07\x87\xff\x3f\xf0\x3f\xff\xc1\xff\xff\x03\xff\x87\xff\x3f\xf0\x3f\xc7\xfe\x1f\xe0\x3f\xff\xc0\xff\xfe\x07\xff\xc7\xfe\x1f\xe0\x3f\xff\xfe\x1f\xe0\xff\xff\xe0\xff\xfe\x07\xff\xff\xfe\x1f\xe0\xff\xff\xff\x1f\xf3\xc0\x0f\xe0\x7f\xfc\x0e\x0f\xff\xff\x1f\xf3\xff\xff\x8f\x1f\x3f\xc0\x0f\xf0\x3f\xf8\x1e\x03\xff\x8f\x1f\x3f\xff\xff\x0f\x1e\x1f\xc0\x0f\xf0\x1f\xf0\x1e\x03\xff\x0f\x1e\x1f\xff\xf8\x0f\xfe\x0f\xff\xff\xf8\x0f\xe0\x3f\x83\xf8\x0f\xfe\x0f\xff\xc0\x1f\xff\x07\xff\xff\xfc\x03\x80\x7f\xff\xc0\x1f\xff\x07\xff\x00\x7f\xff\x80\xff\xff\xfe\x01\x00\xff\xfe\x00\x7f\xff\x80\xff\x01\xc7\xf1\xc0\x03\xff\xff\x00\x01\xff\xf8\x01\xc7\xf1\xc0\x1f\x0f\x83\xe0\xf8\x00\xff\xff\x80\x03\xff\xf0\x0f\x83\xe0\xf8\x1f\x3f\x80\x00\xfc\x00\xff\xff\xe0\x0f\xff\xf0\x3f\x80\x00\xfc\x1f\xff\xe0\x03\xff\xa0\xff\xff\xf0\x1f\xff\xf0\xff\xe0\x03\xff\xbf\xff\xf0\x07\xff\xff\xff\xff\xfc\x7f\xff\xff\xff\xf0\x07\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff")

# javka (0-39)(5 bajtów)
# serce (40-79)(5 bajtów)
# melba (80-132)(6 bajtów)
javka = bytearray()
serce = bytearray()
melba = bytearray()

for i in range(32):
    pocz = i*16
    linia = buffer2[pocz:pocz+16]
    javka = javka + linia[0:5]
    serce = serce + linia[6:11]
    melba = melba + linia[11:]


# Load the raspberry pi logo into the framebuffer (the image is 32x32)
fb = framebuf.FrameBuffer(buffer, 32, 32, framebuf.MONO_HLSB)
fbjsm = framebuf.FrameBuffer(buffer2, 128, 32, framebuf.MONO_HLSB)
fbjavka = framebuf.FrameBuffer(javka, 40, 32, framebuf.MONO_HLSB)
fbserce = framebuf.FrameBuffer(serce, 40, 32, framebuf.MONO_HLSB)
fbmelba = framebuf.FrameBuffer(melba, 40, 32, framebuf.MONO_HLSB)

# while True:
for _ in range(2):
    # Clear the oled display in case it has junk on it.
    oled.fill(0)
    # Blit the image from the framebuffer to the oled display
    oled.blit(fb, 96, 0)
    # Add some text
    oled.text("Javka", 0, 0)
    oled.text("2013", 0, 8)
    oled.text("Melba", 48, 0)
    oled.text("2013", 56, 8)
    # Finally update the oled display so the image & text is displayed
    oled.show()
    # teraz obrazek javkamelba
    utime.sleep(1)
    oled.blit(fbjsm, 0, 0)
    oled.show()
    utime.sleep(1)
    

# naprzemiennie Javka Serce Melba
for _ in range(1):
    oled.fill(1)
    oled.contrast(0)
    oled.blit(fbjavka, 44, 0, framebuf.MONO_HLSB)
    oled.show()
    utime.sleep_ms(750)
    oled.fill(1)
    oled.blit(fbserce, 44, 0, framebuf.MONO_HLSB)
    oled.contrast(255)
    oled.show()
    utime.sleep_ms(750)
    oled.fill(1)
    oled.blit(fbmelba, 40, 0, framebuf.MONO_HLSB)
    oled.contrast(0)
    oled.show()
    utime.sleep_ms(750)
    oled.fill(1)
    oled.blit(fbserce, 44, 0, framebuf.MONO_HLSB)
    oled.contrast(255)
    oled.show()
    utime.sleep_ms(750)


def scroll(fb, szer=40, kier=1, end=None, speed=1):
    bg = fb.pixel(0,0) # 1 dla bialych, 0 dla czarnych
    START = 0
    if kier < 0: START = WIDTH + szer
    if not end: end = WIDTH + szer + 1
    
    for i in range(0,end,speed):
        oled.fill(bg)
        oled.blit(fb, START + kier*i - szer, 0, framebuf.MONO_HLSB)
        oled.show()


def scroll_right(fb, szer=40, end=None, speed=1):
    scroll(fb, szer=szer, end=end, kier=1, speed=speed)

def scroll_left(fb, szer=40, end=None, speed=1):
    scroll(fb, szer=szer, end=end, kier=-1, speed=speed)


oled.contrast(0)


for _ in range(1):
    scroll_right(fbjavka, szer=40)
    scroll_left(fbjavka, szer=40, speed=2)


oled.contrast(127)
for _ in range(1):
    scroll_right(fb, szer=32, speed=3)
    scroll_left(fb, szer=32)

scroll_right(fb, szer=32, end=int(WIDTH/2 + 32/2))
for i in range(9):
    utime.sleep_ms(200)
    oled.invert(i % 2)


utime.sleep(5)
oled.poweroff()
